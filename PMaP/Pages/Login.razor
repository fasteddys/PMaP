@page "/account/login"

@using Blazored.SessionStorage
@using PMaP.Data
@using System.Net
@using PMaP.Models.Authenticate
@inject IAccountService AccountService
@inject IJSRuntime JSRuntime
@inject IMainLayoutService MainLayoutService
@inject ISessionStorageService sessionStorage
@inject NavigationManager NavigationManager

<div style="padding-left: 15%;">
    <div class="card card-primary" style="width: 60%;">
        <div class="card-header" style="background-color:#0066ff">
            <h4 class="caption"><font color="white">Login</font></h4>
        </div>
        <div class="card-body" style="background-color:#e6f0ff">
            <EditForm Model="@model" OnValidSubmit="OnValidSubmit">
                <DataAnnotationsValidator />
                <div class="form-group">
                    <label>Username</label>
                    <InputText @bind-Value="model.Username" class="form-control" />
                    <ValidationMessage For="@(() => model.Username)" />
                </div>
                <div class="form-group">
                    <label>Password</label>
                    <InputText @bind-Value="model.Password" type="password" class="form-control" />
                    <ValidationMessage For="@(() => model.Password)" />
                </div>
                <button disabled="@loading" class="btn btn-primary">
                    @if (loading) 
                    {
                        <span class="spinner-border spinner-border-sm mr-1"></span>
                    }
                    Login
                </button>
            </EditForm>
        </div>
    </div>
</div>

<div class="modal fade" id="myModal" style="background-color: rgba(10,10,10,.8);" aria-modal="true" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
 
            <!-- Modal Header -->
            <div class="modal-header">
                <h4 id="title" class="modal-title"></h4>
                <button type="button" data-dismiss="modal">x</button>
            </div>
 
            <!-- Modal body -->
            <div class="modal-body">
                <span id="message"></span>
            </div>
 
            <!-- Modal footer -->
            <div class="modal-footer">
                <button id="btnOK" type="button" class="btn btn-light" data-dismiss="modal">OK</button>
            </div>
        </div>
    </div>
</div>

@code {
    private Models.Authenticate.AuthenticateRequest model = new Models.Authenticate.AuthenticateRequest();
    private bool loading;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            AuthenticateResponse authenticateResponse = await MainLayoutService.GetUser();
            if (authenticateResponse != null && !string.IsNullOrEmpty(authenticateResponse.Token))
            {
                NavigationManager.NavigateTo("");
            }
        }
    }

    private async void OnValidSubmit()
    {
        loading = true;
        try
        {
            var authenticateResponse = await AccountService.Authenticate(model);
            if (authenticateResponse.RespCode == (int)HttpStatusCode.OK)
            {
                await sessionStorage.SetItemAsync("auth", authenticateResponse);
                NavigationManager.NavigateTo("");
            }
            if (authenticateResponse.RespCode != (int)HttpStatusCode.OK)
            {
                loading = false;
                await JSRuntime.InvokeVoidAsync("showDialog", "Warning!", authenticateResponse.Message);
            }
        }
        catch
        {
            loading = false;
        }
        StateHasChanged();
    }
}
