@using PMaP.Models
@using System.Globalization
@inject IStringLocalizer<Assessment> localizer

<br /><br />
<div class="row">
    <div class="col">
        <div class="col-md-12">
		    <div class="card-header" style="background-color:#0066ff">
                <div class="caption">
                    <font color="white">@Caption</font>
                    @if (showDetailButton)
                    {
                        <button type="button" class="button_add" @onclick="Details" disabled="@loading">
                            @if (loading)
                            {
                                <span class="spinner-border spinner-border-sm mr-1"></span>
                            }
                            else
                            {
                                <i class="fa @(GetShowDetailsStyle())"></i>
                            }
                            &nbsp;&nbsp;@localizer["Detail"]
                        </button>
                    }
                </div>
            </div>
            <table class="table table-striped table-bordered" style="background-color:#e6e6e6" >
                <thead>
                    <tr class="heading" style="color:#336699;">
                        <th>@localizer["Contracts"]</th>
                        <th class="sorting_desc">@localizer["Total OB"]</th>
					    <th class="sorting_desc">@localizer["Secured OB"]</th>
					    <th class="sorting_desc">@localizer["Unsecured OB"]</th>
                        @if (showPrices)
                        {
                            <th class="sorting_desc">@localizer["Secured Price"]</th>
					        <th class="sorting_desc">@localizer["Unsecured Price"]</th>
                        }
                        <th>@localizer["Debtors"]</th>
                        <th>@localizer["Guarantors"]</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>@Summary.Contracts</td>
                        <td>@Summary.TotalOB.ToString("c", CultureInfo.CreateSpecificCulture("es-ES"))</td>
                        <td>@Summary.SecuredOB.ToString("c", CultureInfo.CreateSpecificCulture("es-ES"))</td>
                        <td>@Summary.UnsecuredOB.ToString("c", CultureInfo.CreateSpecificCulture("es-ES"))</td>
                        @if (showPrices)
                        {
                            <td>@Summary.SecuredPrice.ToString("c", CultureInfo.CreateSpecificCulture("es-ES"))</td>
                            <td>@Summary.UnsecuredPrice.ToString("c", CultureInfo.CreateSpecificCulture("es-ES"))</td>
                        }
                        <td>@Summary.Debtors</td>
                        <td>@Summary.Guarantors</td>
                    </tr>
			    </tbody>
		    </table>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public string Caption { get; set; }
    [Parameter]
    public Summary Summary { get; set; }
    [Parameter]
	public bool showDetailButton { get; set; } = false;
	[Parameter]
    public EventCallback<bool> OnDetailsClick { get; set; }
	[Parameter]
	public bool showDetails { get; set; } = false;
    [Parameter]
    public bool showPrices { get; set; } = true;
    [Parameter]
    public bool loading { get; set; } = false;

    private Task Details()
	{
		showDetails = showDetails ? false : true;
		return OnDetailsClick.InvokeAsync(true);
	}

	private string GetShowDetailsStyle()
    {
        return showDetails ? "fa-minus-square-o" : "fa-plus-square-o";
    }
}
