@using PMaP.Data
@using PMaP.Helpers
@inject ILocalStorageService LocalStorageService
@inject NavigationManager NavigationManager

<li class="dropdown dropdown-language">
    <a href="javascript:;" class="dropdown-toggle" data-toggle="dropdown" data-hover="dropdown" data-close-others="true" @onclick:preventDefault>
        <img alt="@languageActive.Name" src="Composicion_files/@languageActive.Flag">
        <span class="langname">@languageActive.Value</span>
    </a>
    <ul class="dropdown-menu dropdown-menu-language">
        @foreach (var language in languageItems)
        {
            <li>
                <a href="" rel="@language.Value" @onclick="@(() => OnSelected(language))">
                    <img alt="@language.Name" src="Composicion_files/@language.Flag"> @language.Name
                </a>
            </li>
        }
    </ul>
</li>

@code {
    private List<LanguageItem> languageItems = new List<LanguageItem>();
    private LanguageItem languageActive = new LanguageItem();

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            languageItems.Add(new LanguageItem
            {
                Active = true,
                Culture = "es-ES",
                Default = true,
                Flag = "es.png",
                Name = "Español",
                Value = "es"
            });
            languageItems.Add(new LanguageItem
            {
                Active = true,
                Culture = "en-US",
                Default = false,
                Flag = "gb.png",
                Name = "Ingles",
                Value = "en"
            });

            var language = await LocalStorageService.GetItem<LanguageItem>("language");
            languageActive = languageItems.Where(x => x.Value == language?.Value).FirstOrDefault() ?? new LanguageItem();
            if (language == null) languageActive = languageItems.First();
            
            StateHasChanged();
        }
    }

    async void OnSelected(LanguageItem language)
    {
        await LocalStorageService.SetItem("language", language);
        await LocalStorageService.SetItem("languageChanged", true);

        var uri = new Uri(NavigationManager.Uri).GetComponents(UriComponents.PathAndQuery, UriFormat.Unescaped);
        var query = $"?culture={Uri.EscapeDataString(language.Culture)}&redirectionUri={Uri.EscapeDataString(uri)}";

        NavigationManager.NavigateTo("Culture/SetCulture" + query, true);
    }
}
